/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package org.example

import org.gradle.api.DefaultTask
import org.gradle.api.Project
import org.gradle.api.Plugin
import org.gradle.api.tasks.Input
import org.gradle.api.tasks.TaskAction
import java.io.File
import java.io.InputStream
import java.nio.charset.Charset

/**
 * Plugin básico de jemplo
 */
class LicensePlugin: Plugin<Project> {
    override fun apply(project: Project) {
        // Register a task
        project.tasks.register("license", LicenseTask::class.java) { task ->
            task.description = "add a license header to source code"   // Añadimos una descripción
            task.group = "from license plugin"                        // Asociamos la tarea a un grupo para ser organizados
        }
    }
}


abstract class LicenseTask : DefaultTask() {
    @Input
    val fileName: String = project.rootDir.toString() + "/license.txt"

    @TaskAction
    fun action(){

        val licenseText = File(fileName).readText() //Se lee el texto de la licencia

        File(project.rootDir.toString()).walk().forEach { //Recorremos todos desde la raiz buscando archivos de extensión .java
            if (it.extension == "java" && !it.absolutePath.contains(".gradle")) {
                var ins: InputStream = it.inputStream()//Leemos y obtenemos contenido del código fuente
                var content = ins.readBytes().toString(Charset.defaultCharset())

                it.writeText(licenseText + content)// Escribimos en el archivo la licensia y el código fuente
            }
        }
    }

}
